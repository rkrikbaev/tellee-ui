{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "### Usage\n\n    <px-vis-spark type=\"line\" width=\"250\" height=\"40\" data='[{\"x\":0,\"y\":0},...]'></px-vis-spark>\n    <px-vis-spark type=\"bar\" width=\"250\" height=\"50\" data=\"[1,2,3]\"></px-vis-spark>\n    <px-vis-spark type=\"winLoss\" width=\"300\" height=\"50\" data=\"[1,-2,3]\"></px-vis-spark>\n\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description\n----------------|-------------\n`--px-vis-series-color-0` | Color of the line and area\n\n`--px-vis-font-family` | The font family for all labels and text",
      "summary": "",
      "path": "px-vis-spark.html",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "seriesColorList",
          "type": "Array",
          "description": "Defines an colors in order that will be used for series.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[\"rgb(0,0,0)\",\"rgb(75,75,75)\",\"rgb(125,125,125)\",\"rgb(200,200,200)\"]",
          "inheritedFrom": "PxColorsBehavior.dataVisColors"
        },
        {
          "name": "domainChanged",
          "type": "boolean",
          "description": "Boolean switching when the domain(s) has(have) changed\n\nServes as a trigger for many elements to redraw",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-d3.html",
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 542,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "PxVisBehaviorD3.domainUpdateNotify"
        },
        {
          "name": "_updateStyles",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 3200,
              "column": 4
            },
            "end": {
              "line": 3202,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxVisBehavior.updateStylesOverride"
        },
        {
          "name": "_stylesUpdated",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 3203,
              "column": 4
            },
            "end": {
              "line": 3206,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "0",
          "inheritedFrom": "PxVisBehavior.updateStylesOverride"
        },
        {
          "name": "type",
          "type": "string",
          "description": "Type of spark - one of \"line\", \"bar\" or \"winLoss\".",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"line\""
        },
        {
          "name": "data",
          "type": "Array",
          "description": "A JSON array of data that will be drawn in the spark.\nSpark type 'line' requires data in the format `[{\"x\":0, \"y\":0},...]`.\nSpark type 'bar' requires a single series of positive values in the format `[1,2,3]`.\nSpark type 'winLoss' requires a single series of positive/negative values in the format `[1,-2,3]`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_dataChanged\""
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_stackData",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "preventResize",
          "type": "boolean",
          "description": "Whether the vis-spark should resize as window size is adjusted.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "width",
          "type": "string",
          "description": "Width of the spark.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"300\""
        },
        {
          "name": "height",
          "type": "string",
          "description": "Height of the spark.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"50\""
        },
        {
          "name": "_seriesConfig",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_extents",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"x\":[null],\"y\":[null]}"
        },
        {
          "name": "_gradient",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_gradientStop1",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_gradientStop2",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_gradientStop3",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disableGradient",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 3209,
              "column": 2
            },
            "end": {
              "line": 3223,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxVisBehavior.updateStylesOverride"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "syncCSSTheme",
          "description": "Retrieves the CSS style variables set on this element and applies them\nto the appropriate properties, triggering a redraw.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_debounceSyncCSSTheme",
          "description": "Debounced function call for `syncCSSTheme` method. Loops through available\nstyle variables to apply them to appropriate objects.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_applyStyleVariables",
          "description": "Called when there is at least one style variable applied (the first is\nexpected to be named `--px-vis-series-color-0`). Loops through each\nstyle variable in the format `--px-vis-series-color-[n]` and applies\nthe resulting values and series color order to the element. Stops looping\nthrough style variables when it finds a gap.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_colorHexToRgb",
          "description": "Converts a hex-format color to RGB.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex",
              "type": "String",
              "description": "A color in hex format"
            }
          ],
          "return": {
            "type": "String",
            "desc": "A color in RGB format"
          },
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_checkIfDevSetSeriesColorOrder",
          "description": "Compares seriesColorOrder property value to the seriesColorOrder to determine if the dev set their own override.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "true if dev set seriesColorOrder"
          },
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_getColor",
          "description": "Helper function to return the correct color for a particular index.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "PxColorsBehavior.getSeriesColors"
        },
        {
          "name": "_calcIndex",
          "description": "Helper function to calculate the index. When we run out of indcies, it loops back over valid indicies.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 223,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            },
            {
              "name": "l"
            }
          ],
          "inheritedFrom": "PxColorsBehavior.getSeriesColors"
        },
        {
          "name": "_isObjEmpty",
          "description": "Checks to see if an object is empty",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 807,
              "column": 2
            },
            "end": {
              "line": 815,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "bool"
          },
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_isD3Empty",
          "description": "Checks to see if an d3 obj is empty",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 823,
              "column": 2
            },
            "end": {
              "line": 828,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "bool"
          },
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_doesD3HaveValues",
          "description": "Checks to see if an d3 obj has something",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 836,
              "column": 2
            },
            "end": {
              "line": 841,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "bool"
          },
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_doesObjHaveValues",
          "description": "Checks to see if an object has values",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 849,
              "column": 2
            },
            "end": {
              "line": 858,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "bool"
          },
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_hasProps",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 860,
              "column": 2
            },
            "end": {
              "line": 872,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_isVarDefined",
          "description": "Checks to see if an object is defined",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 880,
              "column": 2
            },
            "end": {
              "line": 885,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "bool"
          },
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_isVarUndefined",
          "description": "Checks to see if an object is defined",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 892,
              "column": 2
            },
            "end": {
              "line": 897,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "bool"
          },
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_escapeCssSelector",
          "description": "escapes '.' in css selectors so that we can appropriately select stuff with dots in thei ids",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 902,
              "column": 2
            },
            "end": {
              "line": 904,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selector"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_checkThemeVariable",
          "description": "Checks if a theme variable exists, if so, returns the theme value, if not, returns the default",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 909,
              "column": 2
            },
            "end": {
              "line": 926,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "varName"
            },
            {
              "name": "defaultValue"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_checkColorType",
          "description": "Checks if a color is already hex or rgb, if must be a colors obj",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 931,
              "column": 2
            },
            "end": {
              "line": 936,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "c"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_hexToRgb",
          "description": "converts a hex to rgb color",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 941,
              "column": 2
            },
            "end": {
              "line": 952,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_binarySearch",
          "description": "Binary search through sorted chartData",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 957,
              "column": 2
            },
            "end": {
              "line": 974,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            },
            {
              "name": "key"
            },
            {
              "name": "val"
            },
            {
              "name": "lowerIndex"
            },
            {
              "name": "upperIndex"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_fuzzyBinarySearch",
          "description": "Binary search through sorted chartData returning all vals within a window",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 979,
              "column": 2
            },
            "end": {
              "line": 996,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            },
            {
              "name": "key"
            },
            {
              "name": "lowerFuzz"
            },
            {
              "name": "upperFuzz"
            },
            {
              "name": "lowerIndex"
            },
            {
              "name": "upperIndex"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_getAdjacentValues",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 998,
              "column": 2
            },
            "end": {
              "line": 1028,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            },
            {
              "name": "key"
            },
            {
              "name": "lowerFuzz"
            },
            {
              "name": "upperFuzz"
            },
            {
              "name": "lowerIndex"
            },
            {
              "name": "upperIndex"
            },
            {
              "name": "index"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "clone",
          "description": "deep-copy object into newObject",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1033,
              "column": 2
            },
            "end": {
              "line": 1046,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "object"
            },
            {
              "name": "newObject"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "isVarNumber",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1048,
              "column": 2
            },
            "end": {
              "line": 1050,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "inheritedFrom": "PxVisBehavior.commonMethods"
        },
        {
          "name": "_onIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isEqual",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ]
        },
        {
          "name": "_dataChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_generateSeriesConfig",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeStack",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 266,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "createGradient",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 300,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_adjustGradients",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 107,
          "column": 10
        },
        "end": {
          "line": 327,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "series-color-list",
          "description": "Defines an colors in order that will be used for series.",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "PxColorsBehavior.dataVisColors"
        },
        {
          "name": "domain-changed",
          "description": "Boolean switching when the domain(s) has(have) changed\n\nServes as a trigger for many elements to redraw",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-d3.html",
            "start": {
              "line": 538,
              "column": 4
            },
            "end": {
              "line": 542,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxVisBehaviorD3.domainUpdateNotify"
        },
        {
          "name": "type",
          "description": "Type of spark - one of \"line\", \"bar\" or \"winLoss\".",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "data",
          "description": "A JSON array of data that will be drawn in the spark.\nSpark type 'line' requires data in the format `[{\"x\":0, \"y\":0},...]`.\nSpark type 'bar' requires a single series of positive values in the format `[1,2,3]`.\nSpark type 'winLoss' requires a single series of positive/negative values in the format `[1,-2,3]`.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "prevent-resize",
          "description": "Whether the vis-spark should resize as window size is adjusted.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "width",
          "description": "Width of the spark.",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "height",
          "description": "Height of the spark.",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disable-gradient",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "domain-changed-changed",
          "description": "Fired when the `domainChanged` property changes.",
          "metadata": {},
          "inheritedFrom": "PxVisBehaviorD3.domainUpdateNotify"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-vis-spark"
    }
  ]
}
